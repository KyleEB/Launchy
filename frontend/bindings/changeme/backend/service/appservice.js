// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * AppService provides application management functionality
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as domain$0 from "../domain/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../../../github.com/wailsapp/wails/v3/pkg/application/models.js";

/**
 * GetApps returns all available applications
 * @returns {$CancellablePromise<domain$0.AppInfo[]>}
 */
export function GetApps() {
    return $Call.ByID(311567598).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * GetFavorites returns all favorited applications
 * @returns {$CancellablePromise<domain$0.AppInfo[]>}
 */
export function GetFavorites() {
    return $Call.ByID(3340256575).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * LaunchApp launches an application by its exec path and closes Launchy
 * @param {string} execPath
 * @returns {$CancellablePromise<void>}
 */
export function LaunchApp(execPath) {
    return $Call.ByID(2886332216, execPath);
}

/**
 * SearchApps searches for applications based on the query
 * @param {string} query
 * @returns {$CancellablePromise<domain$0.AppInfo[]>}
 */
export function SearchApps(query) {
    return $Call.ByID(1254750610, query).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * SetApp sets the application reference for window management
 * @param {application$0.App | null} app
 * @returns {$CancellablePromise<void>}
 */
export function SetApp(app) {
    return $Call.ByID(495826173, app);
}

/**
 * ToggleFavorite toggles the favorite status of an application
 * @param {string} appName
 * @returns {$CancellablePromise<void>}
 */
export function ToggleFavorite(appName) {
    return $Call.ByID(1306118330, appName);
}

// Private type creation functions
const $$createType0 = domain$0.AppInfo.createFrom;
const $$createType1 = $Create.Array($$createType0);
